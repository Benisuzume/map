#!/usr/bin/env lua

local Map = require ('map.common')
local Globals = require ('map.globals')
local Grimex = require ('map.tools.grimex')
local Path = require ('map.path')

local options = {
	['--version'] = Map.version
}

options ['--help'] = function ()
	io.stdout:write ([[
map constants - Load constant data into the working map

Usage:
  constants [options]
  constants <configuration>

Options:
  --version    Displays the version number.
  --help       Displays this help message.
]])

	os.exit (0)
end

local map, message = Map.initialize (options)

if not map then
	io.stderr:write (message)
	os.exit (1)
end

if not Globals.write (map.settings.output.globals, map.globals) then
	os.exit (1)
end

local function merge_constants (name)
	local files = Map.load_files (map.settings.constants [name])
	table.insert (files, 1, map.settings.output.globals)

	local status, output = Grimex.constants (
		map.settings.prefix, map.settings.output.map, files)

	local output_log_path = Path.join (
		map.settings.output.directory, 'grimex-constants-' .. name .. '.txt')
	Grimex.log (output_log_path, output)

	name = name:gsub ('^%l', string.upper) .. ' Settings: '

	if status then
		io.stdout:write (name, 'OK', '\n')
	else
		io.stdout:write (name, 'Failure', '\n')
	end

	return status
end

local status = merge_constants ('gameplay')
	and merge_constants ('interface')

os.remove (map.settings.output.globals)

if status then
	os.exit (0)
else
	os.exit (1)
end
