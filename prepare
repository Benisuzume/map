#!/usr/bin/env lua

local Map = require ('map.common')
local Path = require ('map.path')

local options = {
	['--version'] = Map.version
}

options ['--help'] = function ()
	io.stdout:write ([[
map prepare - Prepare the new working map

Updates the working map within the output directory, rebuilding trigger string
data if needed.

Usage:
  prepare [options]
  prepare [options] <configuration>

Options:
  --force      Force overwriting of map file. By default, will do
               nothing if the output file already exists.
  --version    Displays the version number.
  --help       Displays this help message.
]])

	os.exit (0)
end

local force

options ['--force'] = function ()
	force = true
end

local map, message = Map.initialize (options)

if not map then
	io.stderr:write (message)
	os.exit (1)
end

if force and Path.is_readable (map.settings.output.map) then
	os.remove (map.settings.output.map)
end

local status = Path.is_readable (map.settings.output.map)
	or Path.copy (map.settings.input.map, map.settings.output.map)

if status then
	io.stdout:write ('Prepare: OK', '\n')
	os.exit (0)
else
	io.stderr:write ('Prepare: Failure', '\n')
	os.exit (1)
end
