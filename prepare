#!/usr/bin/env lua

if not arg [1] or arg [1] == '--help' then
	io.stdout:write ([[
map prepare - Prepare a new working map

Creates a new working map in the output directory, destructively overwriting
an existing work map.

Usage:
  prepare [options]
  prepare <configuration>

Options:
  --version    Displays the version number.
  --help       Displays this help message.
]])

	os.exit (0)
elseif arg [1] == '--version' then
	local Version = require ('map.version')

	io.stdout:write (string.format ([[
map prepare %d.%d.%d
]], Version.major, Version.minor, Version.patch))

	os.exit (0)
end

local Settings = require ('map.settings')
local settings, message = Settings.read (arg [1])

if not settings then
	io.stderr:write (message, '\n')
	os.exit (1)
end

local Path = require ('map.path')

local status = Path.copy (settings.input.map, settings.output.map)

if status then
	io.stdout:write ('Prepare: OK', '\n')
	os.exit (0)
else
	io.stderr:write ('Prepare: Failure', '\n')
	os.exit (1)
end
