#!/usr/bin/env lua

local Map = require ('map.common')
local Globals = require ('map.globals')
local Grimex = require ('map.tools.grimex')
local Path = require ('map.path')

local options = {
	['--version'] = Map.version
}

options ['--help'] = function ()
	io.stdout:write ([[
map objects - Load object data into the working map

Usage:
  objects [options]
  objects <configuration>

Options:
  --version    Displays the version number.
  --help       Displays this help message.
]])

	os.exit (0)
end

local map, message = Map.initialize (options)

if not map then
	io.stderr:write (message)
	os.exit (1)
end

if not Globals.write (map.settings.output.globals, map.globals) then
	os.exit (1)
end

local files, message = Map.load_files (map.settings.objects)

if not files then
	io.stderr:write (message)
	os.exit (1)
end

table.insert (files, 1, map.settings.output.globals)

local status, output = Grimex.objects (
	map.settings.prefix, map.settings.output.map, files)

local output_log_path = Path.join (
	map.settings.output.directory, 'grimex-objects.txt')
Grimex.log (output_log_path, output)

os.remove (map.settings.output.globals)

if status then
	io.stdout:write ('objects: ok', '\n')
	os.exit (0)
else
	io.stderr:write ('objects: failure', '\n')
	os.exit (1)
end
