#!/usr/bin/env lua

if not arg [1] or arg [1] == '--help' then
	io.stdout:write ([[
map build - Combine JASS scripts into a single file

Validates the syntax of the JASS scripts, then combines them into a single
file. The result is placed in the output directory.

Usage:
  build [options]
  build <configuration>

Options:
  --version    Displays the version number.
  --help       Displays this help message.
]])

	os.exit (0)
elseif arg [1] == '--version' then
	local Version = require ('map.version')

	io.stdout:write (string.format ([[
map build %d.%d.%d
]], Version.major, Version.minor, Version.patch))

	os.exit (0)
end

local Settings = require ('map.settings')
local settings, message = Settings.read (arg [1])

if not settings then
	io.stderr:write (message, '\n')
	os.exit (1)
end

local PJass = require ('map.tools.pjass')
local Map = require ('map.common')

local patch_scripts, map_scripts, output = Map.check_scripts (settings)

if not patch_scripts then
	io.stderr:write (output)
	os.exit (1)
end

local scripts = Map.parse_scripts (map_scripts, settings)
Map.debug_scripts (scripts, settings)

if not Map.build_script (scripts, settings) then
	os.exit (1)
end

local status, output = PJass.check (settings.prefix,
	settings.pjass.options, patch_scripts, settings.output.script)

if status then
	io.stdout:write (output)
	os.exit (0)
else
	io.stderr:write (output)
	os.exit (1)
end
